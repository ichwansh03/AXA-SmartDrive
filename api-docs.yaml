openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8088/api
  description: Generated server url
paths:
  /areaWorkGroups:
    get:
      tags:
      - area-work-group-entity-controller
      description: get-areaworkgroup
      operationId: getCollectionResource-areaworkgroup-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAreaWorkGroup'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAreaWorkGroup'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - area-work-group-entity-controller
      description: create-areaworkgroup
      operationId: postCollectionResource-areaworkgroup-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaWorkGroupRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
  /areaWorkGroups/{id}:
    get:
      tags:
      - area-work-group-entity-controller
      description: get-areaworkgroup
      operationId: getItemResource-areaworkgroup-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
        "404":
          description: Not Found
    put:
      tags:
      - area-work-group-entity-controller
      description: update-areaworkgroup
      operationId: putItemResource-areaworkgroup-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaWorkGroupRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
        "204":
          description: No Content
    delete:
      tags:
      - area-work-group-entity-controller
      description: delete-areaworkgroup
      operationId: deleteItemResource-areaworkgroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - area-work-group-entity-controller
      description: patch-areaworkgroup
      operationId: patchItemResource-areaworkgroup-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaWorkGroupRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
        "204":
          description: No Content
  /businessEntities:
    get:
      tags:
      - business-entity-entity-controller
      description: get-businessentity
      operationId: getCollectionResource-businessentity-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelBusinessEntity'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelBusinessEntity'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - business-entity-entity-controller
      description: create-businessentity
      operationId: postCollectionResource-businessentity-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessEntityRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
  /businessEntities/{id}:
    get:
      tags:
      - business-entity-entity-controller
      description: get-businessentity
      operationId: getItemResource-businessentity-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
        "404":
          description: Not Found
    put:
      tags:
      - business-entity-entity-controller
      description: update-businessentity
      operationId: putItemResource-businessentity-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessEntityRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
        "204":
          description: No Content
    delete:
      tags:
      - business-entity-entity-controller
      description: delete-businessentity
      operationId: deleteItemResource-businessentity-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - business-entity-entity-controller
      description: patch-businessentity
      operationId: patchItemResource-businessentity-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessEntityRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
        "204":
          description: No Content
  /carBrands:
    get:
      tags:
      - car-brand-entity-controller
      description: get-carbrand
      operationId: getCollectionResource-carbrand-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCarBrand'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCarBrand'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - car-brand-entity-controller
      description: create-carbrand
      operationId: postCollectionResource-carbrand-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarBrandRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarBrand'
  /carBrands/{id}:
    get:
      tags:
      - car-brand-entity-controller
      description: get-carbrand
      operationId: getItemResource-carbrand-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarBrand'
        "404":
          description: Not Found
    put:
      tags:
      - car-brand-entity-controller
      description: update-carbrand
      operationId: putItemResource-carbrand-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarBrandRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarBrand'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarBrand'
        "204":
          description: No Content
    delete:
      tags:
      - car-brand-entity-controller
      description: delete-carbrand
      operationId: deleteItemResource-carbrand-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - car-brand-entity-controller
      description: patch-carbrand
      operationId: patchItemResource-carbrand-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarBrandRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarBrand'
        "204":
          description: No Content
  /carBrands/{id}/carModels:
    get:
      tags:
      - car-brand-property-reference-controller
      description: get-carmodel-by-carbrand-Id
      operationId: followPropertyReference-carbrand-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCarModel'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - car-brand-property-reference-controller
      description: update-carmodel-by-carbrand-Id
      operationId: createPropertyReference-carbrand-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCarModel'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCarModel'
        "204":
          description: No Content
    delete:
      tags:
      - car-brand-property-reference-controller
      description: delete-carmodel-by-carbrand-Id
      operationId: deletePropertyReference-carbrand-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - car-brand-property-reference-controller
      description: patch-carmodel-by-carbrand-Id
      operationId: createPropertyReference-carbrand-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCarModel'
        "204":
          description: No Content
  /carBrands/{id}/carModels/{propertyId}:
    get:
      tags:
      - car-brand-property-reference-controller
      description: get-carmodel-by-carbrand-Id
      operationId: followPropertyReference-carbrand-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCarModel'
        "404":
          description: Not Found
    delete:
      tags:
      - car-brand-property-reference-controller
      description: delete-carmodel-by-carbrand-Id
      operationId: deletePropertyReferenceId-carbrand-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /carModels:
    get:
      tags:
      - car-model-entity-controller
      description: get-carmodel
      operationId: getCollectionResource-carmodel-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCarModel'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCarModel'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - car-model-entity-controller
      description: create-carmodel
      operationId: postCollectionResource-carmodel-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarModelRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarModel'
  /carModels/{id}:
    get:
      tags:
      - car-model-entity-controller
      description: get-carmodel
      operationId: getItemResource-carmodel-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarModel'
        "404":
          description: Not Found
    put:
      tags:
      - car-model-entity-controller
      description: update-carmodel
      operationId: putItemResource-carmodel-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarModelRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarModel'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarModel'
        "204":
          description: No Content
    delete:
      tags:
      - car-model-entity-controller
      description: delete-carmodel
      operationId: deleteItemResource-carmodel-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - car-model-entity-controller
      description: patch-carmodel
      operationId: patchItemResource-carmodel-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarModelRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarModel'
        "204":
          description: No Content
  /carModels/{id}/carSeries:
    get:
      tags:
      - car-model-property-reference-controller
      description: get-carseries-by-carmodel-Id
      operationId: followPropertyReference-carmodel-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCarSeries'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - car-model-property-reference-controller
      description: update-carseries-by-carmodel-Id
      operationId: createPropertyReference-carmodel-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCarSeries'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCarSeries'
        "204":
          description: No Content
    delete:
      tags:
      - car-model-property-reference-controller
      description: delete-carseries-by-carmodel-Id
      operationId: deletePropertyReference-carmodel-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - car-model-property-reference-controller
      description: patch-carseries-by-carmodel-Id
      operationId: createPropertyReference-carmodel-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCarSeries'
        "204":
          description: No Content
  /carModels/{id}/carSeries/{propertyId}:
    get:
      tags:
      - car-model-property-reference-controller
      description: get-carseries-by-carmodel-Id
      operationId: followPropertyReference-carmodel-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCarSeries'
        "404":
          description: Not Found
    delete:
      tags:
      - car-model-property-reference-controller
      description: delete-carseries-by-carmodel-Id
      operationId: deletePropertyReferenceId-carmodel-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /carSeries:
    get:
      tags:
      - car-series-entity-controller
      description: get-carseries
      operationId: getCollectionResource-carseries-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCarSeries'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCarSeries'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - car-series-entity-controller
      description: create-carseries
      operationId: postCollectionResource-carseries-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarSeriesRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarSeries'
  /carSeries/{id}:
    get:
      tags:
      - car-series-entity-controller
      description: get-carseries
      operationId: getItemResource-carseries-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarSeries'
        "404":
          description: Not Found
    put:
      tags:
      - car-series-entity-controller
      description: update-carseries
      operationId: putItemResource-carseries-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarSeriesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarSeries'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarSeries'
        "204":
          description: No Content
    delete:
      tags:
      - car-series-entity-controller
      description: delete-carseries
      operationId: deleteItemResource-carseries-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - car-series-entity-controller
      description: patch-carseries
      operationId: patchItemResource-carseries-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarSeriesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCarSeries'
        "204":
          description: No Content
  /categories:
    get:
      tags:
      - category-entity-controller
      description: get-category
      operationId: getCollectionResource-category-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCategory'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCategory'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - category-entity-controller
      description: create-category
      operationId: postCollectionResource-category-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCategory'
  /categories/{id}:
    get:
      tags:
      - category-entity-controller
      description: get-category
      operationId: getItemResource-category-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCategory'
        "404":
          description: Not Found
    put:
      tags:
      - category-entity-controller
      description: update-category
      operationId: putItemResource-category-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCategory'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCategory'
        "204":
          description: No Content
    delete:
      tags:
      - category-entity-controller
      description: delete-category
      operationId: deleteItemResource-category-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - category-entity-controller
      description: patch-category
      operationId: patchItemResource-category-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCategory'
        "204":
          description: No Content
  /citieses:
    get:
      tags:
      - cities-entity-controller
      description: get-cities
      operationId: getCollectionResource-cities-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCities'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCities'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - cities-entity-controller
      description: create-cities
      operationId: postCollectionResource-cities-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitiesRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCities'
  /citieses/{id}:
    get:
      tags:
      - cities-entity-controller
      description: get-cities
      operationId: getItemResource-cities-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCities'
        "404":
          description: Not Found
    put:
      tags:
      - cities-entity-controller
      description: update-cities
      operationId: putItemResource-cities-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitiesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCities'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCities'
        "204":
          description: No Content
    delete:
      tags:
      - cities-entity-controller
      description: delete-cities
      operationId: deleteItemResource-cities-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - cities-entity-controller
      description: patch-cities
      operationId: patchItemResource-cities-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitiesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCities'
        "204":
          description: No Content
  /citieses/{id}/areaWorkGroups:
    get:
      tags:
      - cities-property-reference-controller
      description: get-areaworkgroup-by-cities-Id
      operationId: followPropertyReference-cities-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelAreaWorkGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cities-property-reference-controller
      description: update-areaworkgroup-by-cities-Id
      operationId: createPropertyReference-cities-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelAreaWorkGroup'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelAreaWorkGroup'
        "204":
          description: No Content
    delete:
      tags:
      - cities-property-reference-controller
      description: delete-areaworkgroup-by-cities-Id
      operationId: deletePropertyReference-cities-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - cities-property-reference-controller
      description: patch-areaworkgroup-by-cities-Id
      operationId: createPropertyReference-cities-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelAreaWorkGroup'
        "204":
          description: No Content
  /citieses/{id}/areaWorkGroups/{propertyId}:
    get:
      tags:
      - cities-property-reference-controller
      description: get-areaworkgroup-by-cities-Id
      operationId: followPropertyReference-cities-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelAreaWorkGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - cities-property-reference-controller
      description: delete-areaworkgroup-by-cities-Id
      operationId: deletePropertyReferenceId-cities-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /inboxMessagings:
    get:
      tags:
      - inbox-messaging-entity-controller
      description: get-inboxmessaging
      operationId: getCollectionResource-inboxmessaging-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelInboxMessaging'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelInboxMessaging'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - inbox-messaging-entity-controller
      description: create-inboxmessaging
      operationId: postCollectionResource-inboxmessaging-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxMessagingRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelInboxMessaging'
  /inboxMessagings/{id}:
    get:
      tags:
      - inbox-messaging-entity-controller
      description: get-inboxmessaging
      operationId: getItemResource-inboxmessaging-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelInboxMessaging'
        "404":
          description: Not Found
    put:
      tags:
      - inbox-messaging-entity-controller
      description: update-inboxmessaging
      operationId: putItemResource-inboxmessaging-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxMessagingRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelInboxMessaging'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelInboxMessaging'
        "204":
          description: No Content
    delete:
      tags:
      - inbox-messaging-entity-controller
      description: delete-inboxmessaging
      operationId: deleteItemResource-inboxmessaging-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - inbox-messaging-entity-controller
      description: patch-inboxmessaging
      operationId: patchItemResource-inboxmessaging-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxMessagingRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelInboxMessaging'
        "204":
          description: No Content
  /insuranceTypes:
    get:
      tags:
      - insurance-type-entity-controller
      description: get-insurancetype
      operationId: getCollectionResource-insurancetype-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelInsuranceType'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelInsuranceType'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - insurance-type-entity-controller
      description: create-insurancetype
      operationId: postCollectionResource-insurancetype-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceTypeRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelInsuranceType'
  /insuranceTypes/{id}:
    get:
      tags:
      - insurance-type-entity-controller
      description: get-insurancetype
      operationId: getItemResource-insurancetype-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelInsuranceType'
        "404":
          description: Not Found
    put:
      tags:
      - insurance-type-entity-controller
      description: update-insurancetype
      operationId: putItemResource-insurancetype-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceTypeRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelInsuranceType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelInsuranceType'
        "204":
          description: No Content
    delete:
      tags:
      - insurance-type-entity-controller
      description: delete-insurancetype
      operationId: deleteItemResource-insurancetype-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - insurance-type-entity-controller
      description: patch-insurancetype
      operationId: patchItemResource-insurancetype-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceTypeRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelInsuranceType'
        "204":
          description: No Content
  /insuranceTypes/{id}/templateInsurancePremis:
    get:
      tags:
      - insurance-type-property-reference-controller
      description: get-templateinsurancepremi-by-insurancetype-Id
      operationId: followPropertyReference-insurancetype-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateInsurancePremi'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - insurance-type-property-reference-controller
      description: update-templateinsurancepremi-by-insurancetype-Id
      operationId: createPropertyReference-insurancetype-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateInsurancePremi'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateInsurancePremi'
        "204":
          description: No Content
    delete:
      tags:
      - insurance-type-property-reference-controller
      description: delete-templateinsurancepremi-by-insurancetype-Id
      operationId: deletePropertyReference-insurancetype-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - insurance-type-property-reference-controller
      description: patch-templateinsurancepremi-by-insurancetype-Id
      operationId: createPropertyReference-insurancetype-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateInsurancePremi'
        "204":
          description: No Content
  /insuranceTypes/{id}/templateInsurancePremis/{propertyId}:
    get:
      tags:
      - insurance-type-property-reference-controller
      description: get-templateinsurancepremi-by-insurancetype-Id
      operationId: followPropertyReference-insurancetype-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateInsurancePremi'
        "404":
          description: Not Found
    delete:
      tags:
      - insurance-type-property-reference-controller
      description: delete-templateinsurancepremi-by-insurancetype-Id
      operationId: deletePropertyReferenceId-insurancetype-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /partnerAreaWorkgroups:
    get:
      tags:
      - partner-area-workgroup-entity-controller
      description: get-partnerareaworkgroup
      operationId: getCollectionResource-partnerareaworkgroup-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPartnerAreaWorkgroup'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPartnerAreaWorkgroup'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - partner-area-workgroup-entity-controller
      description: create-partnerareaworkgroup
      operationId: postCollectionResource-partnerareaworkgroup-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerAreaWorkgroupRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartnerAreaWorkgroup'
  /partnerAreaWorkgroups/{id}:
    get:
      tags:
      - partner-area-workgroup-entity-controller
      description: get-partnerareaworkgroup
      operationId: getItemResource-partnerareaworkgroup-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartnerAreaWorkgroup'
        "404":
          description: Not Found
    put:
      tags:
      - partner-area-workgroup-entity-controller
      description: update-partnerareaworkgroup
      operationId: putItemResource-partnerareaworkgroup-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerAreaWorkgroupRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartnerAreaWorkgroup'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartnerAreaWorkgroup'
        "204":
          description: No Content
    delete:
      tags:
      - partner-area-workgroup-entity-controller
      description: delete-partnerareaworkgroup
      operationId: deleteItemResource-partnerareaworkgroup-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - partner-area-workgroup-entity-controller
      description: patch-partnerareaworkgroup
      operationId: patchItemResource-partnerareaworkgroup-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerAreaWorkgroupRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartnerAreaWorkgroup'
        "204":
          description: No Content
  /partnerContacts:
    get:
      tags:
      - partner-contact-entity-controller
      description: get-partnercontact
      operationId: getCollectionResource-partnercontact-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPartnerContact'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPartnerContact'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - partner-contact-entity-controller
      description: create-partnercontact
      operationId: postCollectionResource-partnercontact-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerContactRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartnerContact'
  /partnerContacts/{id}:
    get:
      tags:
      - partner-contact-entity-controller
      description: get-partnercontact
      operationId: getItemResource-partnercontact-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartnerContact'
        "404":
          description: Not Found
    put:
      tags:
      - partner-contact-entity-controller
      description: update-partnercontact
      operationId: putItemResource-partnercontact-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerContactRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartnerContact'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartnerContact'
        "204":
          description: No Content
    delete:
      tags:
      - partner-contact-entity-controller
      description: delete-partnercontact
      operationId: deleteItemResource-partnercontact-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - partner-contact-entity-controller
      description: patch-partnercontact
      operationId: patchItemResource-partnercontact-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerContactRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartnerContact'
        "204":
          description: No Content
  /partners:
    get:
      tags:
      - partner-entity-controller
      description: get-partner
      operationId: getCollectionResource-partner-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPartner'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPartner'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - partner-entity-controller
      description: create-partner
      operationId: postCollectionResource-partner-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartner'
  /partners/{id}:
    get:
      tags:
      - partner-entity-controller
      description: get-partner
      operationId: getItemResource-partner-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartner'
        "404":
          description: Not Found
    put:
      tags:
      - partner-entity-controller
      description: update-partner
      operationId: putItemResource-partner-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartner'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartner'
        "204":
          description: No Content
    delete:
      tags:
      - partner-entity-controller
      description: delete-partner
      operationId: deleteItemResource-partner-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - partner-entity-controller
      description: patch-partner
      operationId: patchItemResource-partner-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPartner'
        "204":
          description: No Content
  /partners/{id}/businessEntity:
    get:
      tags:
      - partner-property-reference-controller
      description: get-businessentity-by-partner-Id
      operationId: followPropertyReference-partner-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - partner-property-reference-controller
      description: update-businessentity-by-partner-Id
      operationId: createPropertyReference-partner-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
        "204":
          description: No Content
    delete:
      tags:
      - partner-property-reference-controller
      description: delete-businessentity-by-partner-Id
      operationId: deletePropertyReference-partner-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - partner-property-reference-controller
      description: patch-businessentity-by-partner-Id
      operationId: createPropertyReference-partner-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
        "204":
          description: No Content
  /partners/{id}/businessEntity/{propertyId}:
    get:
      tags:
      - partner-property-reference-controller
      description: get-businessentity-by-partner-Id
      operationId: followPropertyReference-partner-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
        "404":
          description: Not Found
    delete:
      tags:
      - partner-property-reference-controller
      description: delete-businessentity-by-partner-Id
      operationId: deletePropertyReferenceId-partner-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /partners/{id}/city:
    get:
      tags:
      - partner-property-reference-controller
      description: get-cities-by-partner-Id
      operationId: followPropertyReference-partner-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCities'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - partner-property-reference-controller
      description: update-cities-by-partner-Id
      operationId: createPropertyReference-partner-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCities'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCities'
        "204":
          description: No Content
    delete:
      tags:
      - partner-property-reference-controller
      description: delete-cities-by-partner-Id
      operationId: deletePropertyReference-partner-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - partner-property-reference-controller
      description: patch-cities-by-partner-Id
      operationId: createPropertyReference-partner-patch_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCities'
        "204":
          description: No Content
  /partners/{id}/city/{propertyId}:
    get:
      tags:
      - partner-property-reference-controller
      description: get-cities-by-partner-Id
      operationId: followPropertyReference-partner-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCities'
        "404":
          description: Not Found
    delete:
      tags:
      - partner-property-reference-controller
      description: delete-cities-by-partner-Id
      operationId: deletePropertyReferenceId-partner-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /paymentTransactionses:
    get:
      tags:
      - payment-transactions-entity-controller
      description: get-paymenttransactions
      operationId: getCollectionResource-paymenttransactions-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPaymentTransactions'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelPaymentTransactions'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - payment-transactions-entity-controller
      description: create-paymenttransactions
      operationId: postCollectionResource-paymenttransactions-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionsRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransactions'
  /paymentTransactionses/{id}:
    get:
      tags:
      - payment-transactions-entity-controller
      description: get-paymenttransactions
      operationId: getItemResource-paymenttransactions-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransactions'
        "404":
          description: Not Found
    put:
      tags:
      - payment-transactions-entity-controller
      description: update-paymenttransactions
      operationId: putItemResource-paymenttransactions-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionsRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransactions'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransactions'
        "204":
          description: No Content
    delete:
      tags:
      - payment-transactions-entity-controller
      description: delete-paymenttransactions
      operationId: deleteItemResource-paymenttransactions-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - payment-transactions-entity-controller
      description: patch-paymenttransactions
      operationId: patchItemResource-paymenttransactions-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionsRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelPaymentTransactions'
        "204":
          description: No Content
  /profile:
    get:
      tags:
      - profile-controller
      operationId: listAllFormsOfMetadata_1
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModelObject'
  /profile/areaWorkGroups:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/businessEntities:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/carBrands:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/carModels:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_4
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/carSeries:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_5
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/categories:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_6
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/citieses:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_7
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/inboxMessagings:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_8
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/insuranceTypes:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_9
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/partnerAreaWorkgroups:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/partnerContacts:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_11
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/partners:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_12
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/paymentTransactionses:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_13
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/provinsis:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_14
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/regionPlats:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_15
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/serviceOrderTaskses:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_16
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/serviceOrderWorkorders:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_17
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/serviceOrderses:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_18
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/serviceses:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_19
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/templateInsurancePremis:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/templateServiceTasks:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_21
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/templateTaskWorkOrders:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_22
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/templateTypes:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_23
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /profile/zoneses:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_24
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /provinsis:
    get:
      tags:
      - provinsi-entity-controller
      description: get-provinsi
      operationId: getCollectionResource-provinsi-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelProvinsi'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelProvinsi'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - provinsi-entity-controller
      description: create-provinsi
      operationId: postCollectionResource-provinsi-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvinsiRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProvinsi'
  /provinsis/{id}:
    get:
      tags:
      - provinsi-entity-controller
      description: get-provinsi
      operationId: getItemResource-provinsi-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProvinsi'
        "404":
          description: Not Found
    put:
      tags:
      - provinsi-entity-controller
      description: update-provinsi
      operationId: putItemResource-provinsi-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvinsiRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProvinsi'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProvinsi'
        "204":
          description: No Content
    delete:
      tags:
      - provinsi-entity-controller
      description: delete-provinsi
      operationId: deleteItemResource-provinsi-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - provinsi-entity-controller
      description: patch-provinsi
      operationId: patchItemResource-provinsi-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvinsiRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProvinsi'
        "204":
          description: No Content
  /provinsis/{id}/cities:
    get:
      tags:
      - provinsi-property-reference-controller
      description: get-cities-by-provinsi-Id
      operationId: followPropertyReference-provinsi-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCities'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - provinsi-property-reference-controller
      description: update-cities-by-provinsi-Id
      operationId: createPropertyReference-provinsi-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCities'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCities'
        "204":
          description: No Content
    delete:
      tags:
      - provinsi-property-reference-controller
      description: delete-cities-by-provinsi-Id
      operationId: deletePropertyReference-provinsi-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - provinsi-property-reference-controller
      description: patch-cities-by-provinsi-Id
      operationId: createPropertyReference-provinsi-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCities'
        "204":
          description: No Content
  /provinsis/{id}/cities/{propertyId}:
    get:
      tags:
      - provinsi-property-reference-controller
      description: get-cities-by-provinsi-Id
      operationId: followPropertyReference-provinsi-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCities'
        "404":
          description: Not Found
    delete:
      tags:
      - provinsi-property-reference-controller
      description: delete-cities-by-provinsi-Id
      operationId: deletePropertyReferenceId-provinsi-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /provinsis/{id}/regionPlats:
    get:
      tags:
      - provinsi-property-reference-controller
      description: get-regionplat-by-provinsi-Id
      operationId: followPropertyReference-provinsi-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRegionPlat'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - provinsi-property-reference-controller
      description: update-regionplat-by-provinsi-Id
      operationId: createPropertyReference-provinsi-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRegionPlat'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRegionPlat'
        "204":
          description: No Content
    delete:
      tags:
      - provinsi-property-reference-controller
      description: delete-regionplat-by-provinsi-Id
      operationId: deletePropertyReference-provinsi-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - provinsi-property-reference-controller
      description: patch-regionplat-by-provinsi-Id
      operationId: createPropertyReference-provinsi-patch_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRegionPlat'
        "204":
          description: No Content
  /provinsis/{id}/regionPlats/{propertyId}:
    get:
      tags:
      - provinsi-property-reference-controller
      description: get-regionplat-by-provinsi-Id
      operationId: followPropertyReference-provinsi-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRegionPlat'
        "404":
          description: Not Found
    delete:
      tags:
      - provinsi-property-reference-controller
      description: delete-regionplat-by-provinsi-Id
      operationId: deletePropertyReferenceId-provinsi-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /regionPlats:
    get:
      tags:
      - region-plat-entity-controller
      description: get-regionplat
      operationId: getCollectionResource-regionplat-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelRegionPlat'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelRegionPlat'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - region-plat-entity-controller
      description: create-regionplat
      operationId: postCollectionResource-regionplat-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionPlatRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRegionPlat'
  /regionPlats/{id}:
    get:
      tags:
      - region-plat-entity-controller
      description: get-regionplat
      operationId: getItemResource-regionplat-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRegionPlat'
        "404":
          description: Not Found
    put:
      tags:
      - region-plat-entity-controller
      description: update-regionplat
      operationId: putItemResource-regionplat-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionPlatRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRegionPlat'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRegionPlat'
        "204":
          description: No Content
    delete:
      tags:
      - region-plat-entity-controller
      description: delete-regionplat
      operationId: deleteItemResource-regionplat-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - region-plat-entity-controller
      description: patch-regionplat
      operationId: patchItemResource-regionplat-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionPlatRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRegionPlat'
        "204":
          description: No Content
  /serviceOrderTaskses:
    get:
      tags:
      - service-order-tasks-entity-controller
      description: get-serviceordertasks
      operationId: getCollectionResource-serviceordertasks-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelServiceOrderTasks'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelServiceOrderTasks'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - service-order-tasks-entity-controller
      description: create-serviceordertasks
      operationId: postCollectionResource-serviceordertasks-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderTasksRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
  /serviceOrderTaskses/{id}:
    get:
      tags:
      - service-order-tasks-entity-controller
      description: get-serviceordertasks
      operationId: getItemResource-serviceordertasks-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
        "404":
          description: Not Found
    put:
      tags:
      - service-order-tasks-entity-controller
      description: update-serviceordertasks
      operationId: putItemResource-serviceordertasks-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderTasksRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
        "204":
          description: No Content
    delete:
      tags:
      - service-order-tasks-entity-controller
      description: delete-serviceordertasks
      operationId: deleteItemResource-serviceordertasks-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - service-order-tasks-entity-controller
      description: patch-serviceordertasks
      operationId: patchItemResource-serviceordertasks-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderTasksRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
        "204":
          description: No Content
  /serviceOrderTaskses/{id}/areaWorkGroup:
    get:
      tags:
      - service-order-tasks-property-reference-controller
      description: get-areaworkgroup-by-serviceordertasks-Id
      operationId: followPropertyReference-serviceordertasks-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - service-order-tasks-property-reference-controller
      description: update-areaworkgroup-by-serviceordertasks-Id
      operationId: createPropertyReference-serviceordertasks-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
        "204":
          description: No Content
    delete:
      tags:
      - service-order-tasks-property-reference-controller
      description: delete-areaworkgroup-by-serviceordertasks-Id
      operationId: deletePropertyReference-serviceordertasks-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - service-order-tasks-property-reference-controller
      description: patch-areaworkgroup-by-serviceordertasks-Id
      operationId: createPropertyReference-serviceordertasks-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
        "204":
          description: No Content
  /serviceOrderTaskses/{id}/areaWorkGroup/{propertyId}:
    get:
      tags:
      - service-order-tasks-property-reference-controller
      description: get-areaworkgroup-by-serviceordertasks-Id
      operationId: followPropertyReference-serviceordertasks-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
        "404":
          description: Not Found
    delete:
      tags:
      - service-order-tasks-property-reference-controller
      description: delete-areaworkgroup-by-serviceordertasks-Id
      operationId: deletePropertyReferenceId-serviceordertasks-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /serviceOrderTaskses/{id}/serviceOrders:
    get:
      tags:
      - service-order-tasks-property-reference-controller
      description: get-serviceorders-by-serviceordertasks-Id
      operationId: followPropertyReference-serviceordertasks-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrders'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - service-order-tasks-property-reference-controller
      description: update-serviceorders-by-serviceordertasks-Id
      operationId: createPropertyReference-serviceordertasks-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrders'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrders'
        "204":
          description: No Content
    delete:
      tags:
      - service-order-tasks-property-reference-controller
      description: delete-serviceorders-by-serviceordertasks-Id
      operationId: deletePropertyReference-serviceordertasks-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - service-order-tasks-property-reference-controller
      description: patch-serviceorders-by-serviceordertasks-Id
      operationId: createPropertyReference-serviceordertasks-patch_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrders'
        "204":
          description: No Content
  /serviceOrderTaskses/{id}/serviceOrders/{propertyId}:
    get:
      tags:
      - service-order-tasks-property-reference-controller
      description: get-serviceorders-by-serviceordertasks-Id
      operationId: followPropertyReference-serviceordertasks-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrders'
        "404":
          description: Not Found
    delete:
      tags:
      - service-order-tasks-property-reference-controller
      description: delete-serviceorders-by-serviceordertasks-Id
      operationId: deletePropertyReferenceId-serviceordertasks-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /serviceOrderWorkorders:
    get:
      tags:
      - service-order-workorder-entity-controller
      description: get-serviceorderworkorder
      operationId: getCollectionResource-serviceorderworkorder-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelServiceOrderWorkorder'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelServiceOrderWorkorder'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - service-order-workorder-entity-controller
      description: create-serviceorderworkorder
      operationId: postCollectionResource-serviceorderworkorder-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderWorkorderRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderWorkorder'
  /serviceOrderWorkorders/{id}:
    get:
      tags:
      - service-order-workorder-entity-controller
      description: get-serviceorderworkorder
      operationId: getItemResource-serviceorderworkorder-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderWorkorder'
        "404":
          description: Not Found
    put:
      tags:
      - service-order-workorder-entity-controller
      description: update-serviceorderworkorder
      operationId: putItemResource-serviceorderworkorder-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderWorkorderRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderWorkorder'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderWorkorder'
        "204":
          description: No Content
    delete:
      tags:
      - service-order-workorder-entity-controller
      description: delete-serviceorderworkorder
      operationId: deleteItemResource-serviceorderworkorder-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - service-order-workorder-entity-controller
      description: patch-serviceorderworkorder
      operationId: patchItemResource-serviceorderworkorder-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderWorkorderRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderWorkorder'
        "204":
          description: No Content
  /serviceOrderWorkorders/{id}/serviceOrderTasks:
    get:
      tags:
      - service-order-workorder-property-reference-controller
      description: get-serviceordertasks-by-serviceorderworkorder-Id
      operationId: followPropertyReference-serviceorderworkorder-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - service-order-workorder-property-reference-controller
      description: update-serviceordertasks-by-serviceorderworkorder-Id
      operationId: createPropertyReference-serviceorderworkorder-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
        "204":
          description: No Content
    delete:
      tags:
      - service-order-workorder-property-reference-controller
      description: delete-serviceordertasks-by-serviceorderworkorder-Id
      operationId: deletePropertyReference-serviceorderworkorder-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - service-order-workorder-property-reference-controller
      description: patch-serviceordertasks-by-serviceorderworkorder-Id
      operationId: createPropertyReference-serviceorderworkorder-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
        "204":
          description: No Content
  /serviceOrderWorkorders/{id}/serviceOrderTasks/{propertyId}:
    get:
      tags:
      - service-order-workorder-property-reference-controller
      description: get-serviceordertasks-by-serviceorderworkorder-Id
      operationId: followPropertyReference-serviceorderworkorder-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
        "404":
          description: Not Found
    delete:
      tags:
      - service-order-workorder-property-reference-controller
      description: delete-serviceordertasks-by-serviceorderworkorder-Id
      operationId: deletePropertyReferenceId-serviceorderworkorder-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /serviceOrderses:
    get:
      tags:
      - service-orders-entity-controller
      description: get-serviceorders
      operationId: getCollectionResource-serviceorders-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelServiceOrders'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelServiceOrders'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - service-orders-entity-controller
      description: create-serviceorders
      operationId: postCollectionResource-serviceorders-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrdersRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrders'
  /serviceOrderses/{id}:
    get:
      tags:
      - service-orders-entity-controller
      description: get-serviceorders
      operationId: getItemResource-serviceorders-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrders'
        "404":
          description: Not Found
    put:
      tags:
      - service-orders-entity-controller
      description: update-serviceorders
      operationId: putItemResource-serviceorders-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrdersRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrders'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrders'
        "204":
          description: No Content
    delete:
      tags:
      - service-orders-entity-controller
      description: delete-serviceorders
      operationId: deleteItemResource-serviceorders-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - service-orders-entity-controller
      description: patch-serviceorders
      operationId: patchItemResource-serviceorders-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrdersRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceOrders'
        "204":
          description: No Content
  /serviceses:
    get:
      tags:
      - services-entity-controller
      description: get-services
      operationId: getCollectionResource-services-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelServices'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelServices'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - services-entity-controller
      description: create-services
      operationId: postCollectionResource-services-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServices'
  /serviceses/{id}:
    get:
      tags:
      - services-entity-controller
      description: get-services
      operationId: getItemResource-services-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServices'
        "404":
          description: Not Found
    put:
      tags:
      - services-entity-controller
      description: update-services
      operationId: putItemResource-services-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServices'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServices'
        "204":
          description: No Content
    delete:
      tags:
      - services-entity-controller
      description: delete-services
      operationId: deleteItemResource-services-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - services-entity-controller
      description: patch-services
      operationId: patchItemResource-services-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServices'
        "204":
          description: No Content
  /templateInsurancePremis:
    get:
      tags:
      - template-insurance-premi-entity-controller
      description: get-templateinsurancepremi
      operationId: getCollectionResource-templateinsurancepremi-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTemplateInsurancePremi'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTemplateInsurancePremi'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - template-insurance-premi-entity-controller
      description: create-templateinsurancepremi
      operationId: postCollectionResource-templateinsurancepremi-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateInsurancePremiRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateInsurancePremi'
  /templateInsurancePremis/{id}:
    get:
      tags:
      - template-insurance-premi-entity-controller
      description: get-templateinsurancepremi
      operationId: getItemResource-templateinsurancepremi-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateInsurancePremi'
        "404":
          description: Not Found
    put:
      tags:
      - template-insurance-premi-entity-controller
      description: update-templateinsurancepremi
      operationId: putItemResource-templateinsurancepremi-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateInsurancePremiRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateInsurancePremi'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateInsurancePremi'
        "204":
          description: No Content
    delete:
      tags:
      - template-insurance-premi-entity-controller
      description: delete-templateinsurancepremi
      operationId: deleteItemResource-templateinsurancepremi-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - template-insurance-premi-entity-controller
      description: patch-templateinsurancepremi
      operationId: patchItemResource-templateinsurancepremi-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateInsurancePremiRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateInsurancePremi'
        "204":
          description: No Content
  /templateServiceTasks:
    get:
      tags:
      - template-service-task-entity-controller
      description: get-templateservicetask
      operationId: getCollectionResource-templateservicetask-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTemplateServiceTask'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTemplateServiceTask'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - template-service-task-entity-controller
      description: create-templateservicetask
      operationId: postCollectionResource-templateservicetask-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateServiceTaskRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateServiceTask'
  /templateServiceTasks/{id}:
    get:
      tags:
      - template-service-task-entity-controller
      description: get-templateservicetask
      operationId: getItemResource-templateservicetask-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateServiceTask'
        "404":
          description: Not Found
    put:
      tags:
      - template-service-task-entity-controller
      description: update-templateservicetask
      operationId: putItemResource-templateservicetask-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateServiceTaskRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateServiceTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateServiceTask'
        "204":
          description: No Content
    delete:
      tags:
      - template-service-task-entity-controller
      description: delete-templateservicetask
      operationId: deleteItemResource-templateservicetask-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - template-service-task-entity-controller
      description: patch-templateservicetask
      operationId: patchItemResource-templateservicetask-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateServiceTaskRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateServiceTask'
        "204":
          description: No Content
  /templateServiceTasks/{id}/templateTaskWorkOrder:
    get:
      tags:
      - template-service-task-property-reference-controller
      description: get-templatetaskworkorder-by-templateservicetask-Id
      operationId: followPropertyReference-templateservicetask-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateTaskWorkOrder'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - template-service-task-property-reference-controller
      description: update-templatetaskworkorder-by-templateservicetask-Id
      operationId: createPropertyReference-templateservicetask-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateTaskWorkOrder'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateTaskWorkOrder'
        "204":
          description: No Content
    delete:
      tags:
      - template-service-task-property-reference-controller
      description: delete-templatetaskworkorder-by-templateservicetask-Id
      operationId: deletePropertyReference-templateservicetask-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - template-service-task-property-reference-controller
      description: patch-templatetaskworkorder-by-templateservicetask-Id
      operationId: createPropertyReference-templateservicetask-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateTaskWorkOrder'
        "204":
          description: No Content
  /templateServiceTasks/{id}/templateTaskWorkOrder/{propertyId}:
    get:
      tags:
      - template-service-task-property-reference-controller
      description: get-templatetaskworkorder-by-templateservicetask-Id
      operationId: followPropertyReference-templateservicetask-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateTaskWorkOrder'
        "404":
          description: Not Found
    delete:
      tags:
      - template-service-task-property-reference-controller
      description: delete-templatetaskworkorder-by-templateservicetask-Id
      operationId: deletePropertyReferenceId-templateservicetask-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /templateTaskWorkOrders:
    get:
      tags:
      - template-task-work-order-entity-controller
      description: get-templatetaskworkorder
      operationId: getCollectionResource-templatetaskworkorder-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTemplateTaskWorkOrder'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTemplateTaskWorkOrder'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - template-task-work-order-entity-controller
      description: create-templatetaskworkorder
      operationId: postCollectionResource-templatetaskworkorder-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateTaskWorkOrderRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateTaskWorkOrder'
  /templateTaskWorkOrders/{id}:
    get:
      tags:
      - template-task-work-order-entity-controller
      description: get-templatetaskworkorder
      operationId: getItemResource-templatetaskworkorder-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateTaskWorkOrder'
        "404":
          description: Not Found
    put:
      tags:
      - template-task-work-order-entity-controller
      description: update-templatetaskworkorder
      operationId: putItemResource-templatetaskworkorder-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateTaskWorkOrderRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateTaskWorkOrder'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateTaskWorkOrder'
        "204":
          description: No Content
    delete:
      tags:
      - template-task-work-order-entity-controller
      description: delete-templatetaskworkorder
      operationId: deleteItemResource-templatetaskworkorder-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - template-task-work-order-entity-controller
      description: patch-templatetaskworkorder
      operationId: patchItemResource-templatetaskworkorder-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateTaskWorkOrderRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateTaskWorkOrder'
        "204":
          description: No Content
  /templateTypes:
    get:
      tags:
      - template-type-entity-controller
      description: get-templatetype
      operationId: getCollectionResource-templatetype-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTemplateType'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelTemplateType'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - template-type-entity-controller
      description: create-templatetype
      operationId: postCollectionResource-templatetype-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateTypeRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateType'
  /templateTypes/{id}:
    get:
      tags:
      - template-type-entity-controller
      description: get-templatetype
      operationId: getItemResource-templatetype-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateType'
        "404":
          description: Not Found
    put:
      tags:
      - template-type-entity-controller
      description: update-templatetype
      operationId: putItemResource-templatetype-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateTypeRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateType'
        "204":
          description: No Content
    delete:
      tags:
      - template-type-entity-controller
      description: delete-templatetype
      operationId: deleteItemResource-templatetype-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - template-type-entity-controller
      description: patch-templatetype
      operationId: patchItemResource-templatetype-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateTypeRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTemplateType'
        "204":
          description: No Content
  /templateTypes/{id}/templateServiceTasks:
    get:
      tags:
      - template-type-property-reference-controller
      description: get-templateservicetask-by-templatetype-Id
      operationId: followPropertyReference-templatetype-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateServiceTask'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - template-type-property-reference-controller
      description: update-templateservicetask-by-templatetype-Id
      operationId: createPropertyReference-templatetype-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateServiceTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateServiceTask'
        "204":
          description: No Content
    delete:
      tags:
      - template-type-property-reference-controller
      description: delete-templateservicetask-by-templatetype-Id
      operationId: deletePropertyReference-templatetype-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - template-type-property-reference-controller
      description: patch-templateservicetask-by-templatetype-Id
      operationId: createPropertyReference-templatetype-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateServiceTask'
        "204":
          description: No Content
  /templateTypes/{id}/templateServiceTasks/{propertyId}:
    get:
      tags:
      - template-type-property-reference-controller
      description: get-templateservicetask-by-templatetype-Id
      operationId: followPropertyReference-templatetype-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateServiceTask'
        "404":
          description: Not Found
    delete:
      tags:
      - template-type-property-reference-controller
      description: delete-templateservicetask-by-templatetype-Id
      operationId: deletePropertyReferenceId-templatetype-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /zoneses:
    get:
      tags:
      - zones-entity-controller
      description: get-zones
      operationId: getCollectionResource-zones-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelZones'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelZones'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - zones-entity-controller
      description: create-zones
      operationId: postCollectionResource-zones-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelZones'
  /zoneses/{id}:
    get:
      tags:
      - zones-entity-controller
      description: get-zones
      operationId: getItemResource-zones-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelZones'
        "404":
          description: Not Found
    put:
      tags:
      - zones-entity-controller
      description: update-zones
      operationId: putItemResource-zones-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelZones'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelZones'
        "204":
          description: No Content
    delete:
      tags:
      - zones-entity-controller
      description: delete-zones
      operationId: deleteItemResource-zones-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - zones-entity-controller
      description: patch-zones
      operationId: patchItemResource-zones-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelZones'
        "204":
          description: No Content
  /zoneses/{id}/templateInsurancePremis:
    get:
      tags:
      - zones-property-reference-controller
      description: get-templateinsurancepremi-by-zones-Id
      operationId: followPropertyReference-zones-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateInsurancePremi'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - zones-property-reference-controller
      description: update-templateinsurancepremi-by-zones-Id
      operationId: createPropertyReference-zones-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateInsurancePremi'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateInsurancePremi'
        "204":
          description: No Content
    delete:
      tags:
      - zones-property-reference-controller
      description: delete-templateinsurancepremi-by-zones-Id
      operationId: deletePropertyReference-zones-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - zones-property-reference-controller
      description: patch-templateinsurancepremi-by-zones-Id
      operationId: createPropertyReference-zones-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateInsurancePremi'
        "204":
          description: No Content
  /zoneses/{id}/templateInsurancePremis/{propertyId}:
    get:
      tags:
      - zones-property-reference-controller
      description: get-templateinsurancepremi-by-zones-Id
      operationId: followPropertyReference-zones-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTemplateInsurancePremi'
        "404":
          description: Not Found
    delete:
      tags:
      - zones-property-reference-controller
      description: delete-templateinsurancepremi-by-zones-Id
      operationId: deletePropertyReferenceId-zones-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /master/zones/update:
    put:
      tags:
      - zone-controller
      operationId: updateZoneById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/tety:
    get:
      tags:
      - tety-controller
      operationId: findAllData_1
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    put:
      tags:
      - tety-controller
      operationId: updateData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateTypeDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - tety-controller
      operationId: saveData_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateTypeDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/temi:
    get:
      tags:
      - temi-controller
      operationId: findAllData_3
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    put:
      tags:
      - temi-controller
      operationId: updateData_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateInsurancePremiDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - temi-controller
      operationId: saveData_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateInsurancePremiDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/arwg:
    get:
      tags:
      - arwg-controller
      operationId: findAllData_12
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    put:
      tags:
      - arwg-controller
      operationId: updateData_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaWorkGroupDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - arwg-controller
      operationId: saveData_13
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaWorkGroupDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/zones:
    get:
      tags:
      - zone-controller
      operationId: findAllZones
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - zone-controller
      operationId: saveZone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/tewo:
    get:
      tags:
      - tewo-controller
      operationId: findAllData
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - tewo-controller
      operationId: saveData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TewoDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - tewo-controller
      operationId: updateData_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TewoDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/testa:
    get:
      tags:
      - testa-controller
      operationId: findAllData_2
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - testa-controller
      operationId: saveData_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateServiceTaskDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - testa-controller
      operationId: updateData_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateServiceTaskDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/regp:
    get:
      tags:
      - regp-controller
      operationId: findAllData_4
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - regp-controller
      operationId: saveData_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionPlatDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - regp-controller
      operationId: updateData_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionPlatDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/provinsi:
    post:
      tags:
      - prov-controller
      operationId: saveData_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvinsiDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - prov-controller
      operationId: updateData_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvinsiDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/inty:
    get:
      tags:
      - inty-controller
      operationId: findAllData_5
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - inty-controller
      operationId: saveData_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceTypeDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - inty-controller
      operationId: updateData_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceTypeDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/ibme:
    get:
      tags:
      - ibme-controller
      operationId: findAllData_6
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - ibme-controller
      operationId: saveData_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbmeDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - ibme-controller
      operationId: updateData_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbmeDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/cities:
    get:
      tags:
      - city-controller
      operationId: findAllData_7
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - city-controller
      operationId: saveData_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitiesDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - city-controller
      operationId: updateData_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitiesDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/category:
    get:
      tags:
      - cate-controller
      operationId: findAllData_8
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - cate-controller
      operationId: saveData_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - cate-controller
      operationId: updateData_10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/carm:
    get:
      tags:
      - carm-controller
      operationId: findAllData_9
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - carm-controller
      operationId: saveData_10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarModelDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - carm-controller
      operationId: updateData_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarModelDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/carb:
    get:
      tags:
      - carb-controller
      operationId: findAllData_10
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - carb-controller
      operationId: saveData_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarBrandDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - carb-controller
      operationId: updateData_12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarBrandDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/car-series:
    get:
      tags:
      - cars-controller
      operationId: findAllData_11
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    post:
      tags:
      - cars-controller
      operationId: saveData_12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarSeriesDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    patch:
      tags:
      - cars-controller
      operationId: updateData_13
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarSeriesDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /service/search:
    get:
      tags:
      - services-controller
      operationId: getServicesById
      parameters:
      - name: seroid
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /payment/paymentTransactions:
    get:
      tags:
      - payment-transaction-controller
      operationId: getAllPaymentTransactions
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/zones/{id}:
    get:
      tags:
      - zone-controller
      operationId: findZoneById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/tewo/{id}:
    get:
      tags:
      - tewo-controller
      operationId: findDataById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/tety/{id}:
    get:
      tags:
      - tety-controller
      operationId: findDataById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/testa/{id}:
    get:
      tags:
      - testa-controller
      operationId: findDataById_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/temi/{id}:
    get:
      tags:
      - temi-controller
      operationId: findDataById_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/regp/{id}:
    get:
      tags:
      - regp-controller
      operationId: findDataById_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/provinsi/{id}:
    get:
      tags:
      - prov-controller
      operationId: findDataById_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/inty/{id}:
    get:
      tags:
      - inty-controller
      operationId: findDataById_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/ibme/{id}:
    get:
      tags:
      - ibme-controller
      operationId: findDataById_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
    delete:
      tags:
      - ibme-controller
      operationId: destroyData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/cities/{id}:
    get:
      tags:
      - city-controller
      operationId: findDataById_8
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/category/{id}:
    get:
      tags:
      - cate-controller
      operationId: findDataById_9
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/carm/{id}:
    get:
      tags:
      - carm-controller
      operationId: findDataById_10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/carb/{id}:
    get:
      tags:
      - carb-controller
      operationId: findDataById_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/car-series/{id}:
    get:
      tags:
      - cars-controller
      operationId: findDataById_12
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /master/arwg/{id}:
    get:
      tags:
      - arwg-controller
      operationId: findDataById_13
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /bsns:
    get:
      tags:
      - business-entity-controller
      operationId: getAll
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
components:
  schemas:
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    RepresentationModelObject:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCarModel:
      type: object
      properties:
        carmName:
          type: string
        carmCarbId:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelCarModel:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            carModels:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCarModel'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelCarSeries:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            carSeries:
              type: array
              items:
                $ref: '#/components/schemas/CarSeriesResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelObject:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            objects:
              type: array
              items:
                type: object
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelTemplateServiceTask:
      type: object
      properties:
        testaName:
          type: string
        testaGroup:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelTemplateServiceTask:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            templateServiceTasks:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTemplateServiceTask'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelTemplateTaskWorkOrder:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            templateTaskWorkOrders:
              type: array
              items:
                $ref: '#/components/schemas/TemplateTaskWorkOrderResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelBusinessEntity:
      type: object
      properties:
        entityModifiedDate:
          type: string
          format: date-time
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelBusinessEntity:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            businessEntities:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelBusinessEntity'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelRegionPlat:
      type: object
      properties:
        regpDesc:
          type: string
        regpProvId:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelRegionPlat:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            regionPlats:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelRegionPlat'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelZones:
      type: object
      properties:
        zonesName:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelZones:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            zoneses:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelZones'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelTemplateInsurancePremi:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            templateInsurancePremis:
              type: array
              items:
                $ref: '#/components/schemas/TemplateInsurancePremiResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCategory:
      type: object
      properties:
        cateName:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCategory:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            categories:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCategory'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelPaymentTransactions:
      type: object
      properties:
        patr_created_on:
          type: string
          format: date-time
        patr_debet:
          type: number
          format: double
        patr_credit:
          type: number
          format: double
        patr_usac_accountNo_from:
          type: integer
          format: int64
        patr_usac_accountNo_to:
          type: integer
          format: int64
        enumPayment:
          type: string
          enum:
          - SALARY
          - PREMI
          - CLAIM_EVENT
          - PAID_PARTNER
        patr_invoice_no:
          type: string
        patr_notes:
          type: string
        patr_trxno_rev:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelPaymentTransactions:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            paymentTransactionses:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPaymentTransactions'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelPartnerContact:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelPartnerContact:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            partnerContacts:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPartnerContact'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelTemplateType:
      type: object
      properties:
        tetyName:
          type: string
        tetyGroup:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelTemplateType:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            templateTypes:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTemplateType'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelTemplateServiceTask:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            templateServiceTasks:
              type: array
              items:
                $ref: '#/components/schemas/TemplateServiceTaskResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelServiceOrders:
      type: object
      properties:
        seroOrdtType:
          maxLength: 15
          minLength: 0
          type: string
          enum:
          - CREATE
          - MODIFY
          - CLOSE
        seroStatus:
          maxLength: 15
          minLength: 0
          type: string
          enum:
          - OPEN
          - CANCELLED
          - REJECT
          - CLOSED
        seroReason:
          type: string
        servClaimNo:
          maxLength: 12
          minLength: 0
          type: string
        servClaimStartdate:
          type: string
          format: date
        servClaimEnddate:
          type: string
          format: date
        seroServId:
          type: integer
          format: int64
        seroSeroId:
          type: string
        seroAgentEntityid:
          type: integer
          format: int64
        seroArwgCode:
          maxLength: 15
          minLength: 0
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelServiceOrders:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            serviceOrderses:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelServiceOrders'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelInsuranceType:
      type: object
      properties:
        intyDesc:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelInsuranceType:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            insuranceTypes:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelInsuranceType'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelCities:
      type: object
      properties:
        cityName:
          type: string
        cityProvId:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCities:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            citieses:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCities'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelAreaWorkGroup:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            areaWorkGroups:
              type: array
              items:
                $ref: '#/components/schemas/AreaWorkGroupResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCarSeries:
      type: object
      properties:
        carsName:
          type: string
        carsPassenger:
          type: integer
          format: int32
        carsCarmId:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCarSeries:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            carSeries:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCarSeries'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelServiceOrderTasks:
      type: object
      properties:
        seotName:
          type: string
        seotStartDate:
          type: string
          format: date
        seotEndDate:
          type: string
          format: date
        seotActualStartdate:
          type: string
          format: date
        seotActualEnddate:
          type: string
          format: date
        seotStatus:
          maxLength: 15
          minLength: 0
          type: string
          enum:
          - INPORGRESS
          - CANCELLED
          - COMPLETED
        seotArwgCode:
          maxLength: 15
          minLength: 0
          type: string
        seotSeroId:
          maxLength: 25
          minLength: 0
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelServiceOrderTasks:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            serviceOrderTaskses:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelServiceOrderTasks'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelAreaWorkGroup:
      type: object
      properties:
        arwgDesc:
          type: string
        arwgCityId:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCarBrand:
      type: object
      properties:
        cabrName:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCarBrand:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            carBrands:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCarBrand'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelCarModel:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            carModels:
              type: array
              items:
                $ref: '#/components/schemas/CarModelResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelTemplateTaskWorkOrder:
      type: object
      properties:
        tewoName:
          type: string
        tewoTestaId:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelTemplateTaskWorkOrder:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            templateTaskWorkOrders:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTemplateTaskWorkOrder'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelAreaWorkGroup:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            areaWorkGroups:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelAreaWorkGroup'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelInboxMessaging:
      type: object
      properties:
        ibmeDate:
          type: string
          format: date
        ibme_entityid_source:
          type: integer
          format: int32
        ibme_entityid_target:
          type: integer
          format: int32
        ibme_type:
          type: integer
          format: int32
        ibme_count:
          type: integer
          format: int32
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelInboxMessaging:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            inboxMessagings:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelInboxMessaging'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelPartnerAreaWorkgroup:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelPartnerAreaWorkgroup:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            partnerAreaWorkgroups:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPartnerAreaWorkgroup'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelTemplateInsurancePremi:
      type: object
      properties:
        temiName:
          type: string
        temiRateMin:
          type: number
          format: double
        temiRateMax:
          type: number
          format: double
        temiNominal:
          type: number
          format: double
        temiType:
          type: string
        temiZonesId:
          type: integer
          format: int64
        temiIntyName:
          type: string
        temiCateId:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelTemplateInsurancePremi:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            templateInsurancePremis:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTemplateInsurancePremi'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelPartner:
      type: object
      properties:
        partName:
          type: string
        partAddress:
          type: string
        partJoinDate:
          type: string
          format: date-time
        partAccountNo:
          type: string
        partNpwp:
          type: string
        partStatus:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        partModifiedDate:
          type: string
          format: date-time
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelPartner:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            partners:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelPartner'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelProvinsi:
      type: object
      properties:
        provName:
          type: string
        prov_zones_id:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelProvinsi:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            provinsis:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelProvinsi'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelCities:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            citieses:
              type: array
              items:
                $ref: '#/components/schemas/CitiesResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelRegionPlat:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            regionPlats:
              type: array
              items:
                $ref: '#/components/schemas/RegionPlatResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelServices:
      type: object
      properties:
        servCreatedOn:
          type: string
          format: date
        servType:
          maxLength: 15
          minLength: 0
          type: string
        servInsuranceNo:
          maxLength: 12
          minLength: 0
          type: string
        servVehicleNumber:
          maxLength: 12
          minLength: 0
          type: string
        servStartDate:
          type: string
          format: date
        servEndDate:
          type: string
          format: date
        servStatus:
          maxLength: 15
          minLength: 0
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        servServId:
          type: integer
          format: int64
        servCustEntityId:
          type: integer
          format: int64
        servCreqEntityId:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelServices:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            serviceses:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelServices'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelServiceOrderWorkorder:
      type: object
      properties:
        sowoName:
          type: string
        sowoModDate:
          type: string
          format: date
        sowoStatus:
          type: string
        sowoSeotId:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelServiceOrderWorkorder:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            serviceOrderWorkorders:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelServiceOrderWorkorder'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    AreaWorkGroupRequestBody:
      type: object
      properties:
        arwgCode:
          type: string
        arwgDesc:
          type: string
        arwgCityId:
          type: integer
          format: int64
        employeeAreaWorkgroup:
          type: array
          items:
            type: string
    BusinessEntityRequestBody:
      type: object
      properties:
        entityId:
          type: integer
          format: int64
        entityModifiedDate:
          type: string
          format: date-time
        user:
          type: string
        banks:
          type: string
        fintech:
          type: string
        customerRequest:
          type: array
          items:
            type: string
    CarSeriesRequestBody:
      type: object
      properties:
        carsId:
          type: integer
          format: int64
        carsName:
          type: string
        carsPassenger:
          type: integer
          format: int32
        carsCarmId:
          type: integer
          format: int64
        customerInscAssets:
          type: array
          items:
            type: string
    CitiesRequestBody:
      type: object
      properties:
        cityId:
          type: integer
          format: int64
        cityName:
          type: string
        cityProvId:
          type: integer
          format: int64
        areaWorkGroups:
          type: array
          items:
            type: string
        userAddresses:
          type: array
          items:
            type: string
        customerInscAssets:
          type: array
          items:
            type: string
    InsuranceTypeRequestBody:
      type: object
      properties:
        intyName:
          type: string
        intyDesc:
          type: string
        templateInsurancePremis:
          type: array
          items:
            type: string
        customerInscAssets:
          type: array
          items:
            type: string
    TemplateInsurancePremiRequestBody:
      type: object
      properties:
        temiId:
          type: integer
          format: int64
        temiName:
          type: string
        temiRateMin:
          type: number
          format: double
        temiRateMax:
          type: number
          format: double
        temiNominal:
          type: number
          format: double
        temiType:
          type: string
        temiZonesId:
          type: integer
          format: int64
        temiIntyName:
          type: string
        temiCateId:
          type: integer
          format: int64
    CarBrandRequestBody:
      type: object
      properties:
        cabrID:
          type: integer
          format: int64
        cabrName:
          type: string
        carModels:
          type: array
          items:
            type: string
    CarModelRequestBody:
      type: object
      properties:
        carmId:
          type: integer
          format: int64
        carmName:
          type: string
        carmCarbId:
          type: integer
          format: int64
        carSeries:
          type: array
          items:
            type: string
    AreaWorkGroupResponse:
      type: object
      properties:
        arwgDesc:
          type: string
        arwgCityId:
          type: integer
          format: int64
    CarModelResponse:
      type: object
      properties:
        carmName:
          type: string
        carmCarbId:
          type: integer
          format: int64
    CarSeriesResponse:
      type: object
      properties:
        carsName:
          type: string
        carsPassenger:
          type: integer
          format: int32
        carsCarmId:
          type: integer
          format: int64
    CitiesResponse:
      type: object
      properties:
        cityName:
          type: string
        cityProvId:
          type: integer
          format: int64
    TemplateInsurancePremiResponse:
      type: object
      properties:
        temiName:
          type: string
        temiRateMin:
          type: number
          format: double
        temiRateMax:
          type: number
          format: double
        temiNominal:
          type: number
          format: double
        temiType:
          type: string
        temiZonesId:
          type: integer
          format: int64
        temiIntyName:
          type: string
        temiCateId:
          type: integer
          format: int64
    CategoryRequestBody:
      type: object
      properties:
        cateId:
          type: integer
          format: int64
        cateName:
          type: string
    InboxMessagingRequestBody:
      type: object
      properties:
        ibmeId:
          type: integer
          format: int64
        ibmeDate:
          type: string
          format: date
        ibme_entityid_source:
          type: integer
          format: int32
        ibme_entityid_target:
          type: integer
          format: int32
        ibme_type:
          type: integer
          format: int32
        ibme_count:
          type: integer
          format: int32
    PartnerAreaWorkgroupRequestBody:
      type: object
    PartnerContactRequestBody:
      type: object
    PartnerRequestBody:
      type: object
      properties:
        partEntityid:
          type: integer
          format: int64
        partName:
          type: string
        partAddress:
          type: string
        partJoinDate:
          type: string
          format: date-time
        partAccountNo:
          type: string
        partNpwp:
          type: string
        partStatus:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        partModifiedDate:
          type: string
          format: date-time
        businessEntity:
          type: string
        city:
          type: string
    PaymentTransactionsRequestBody:
      type: object
      properties:
        patr_trxno:
          type: string
        patr_created_on:
          type: string
          format: date-time
        patr_debet:
          type: number
          format: double
        patr_credit:
          type: number
          format: double
        patr_usac_accountNo_from:
          type: integer
          format: int64
        patr_usac_accountNo_to:
          type: integer
          format: int64
        enumPayment:
          type: string
          enum:
          - SALARY
          - PREMI
          - CLAIM_EVENT
          - PAID_PARTNER
        patr_invoice_no:
          type: string
        patr_notes:
          type: string
        patr_trxno_rev:
          type: string
    ProvinsiRequestBody:
      type: object
      properties:
        provId:
          type: integer
          format: int64
        provName:
          type: string
        prov_zones_id:
          type: integer
          format: int64
        cities:
          type: array
          items:
            type: string
        regionPlats:
          type: array
          items:
            type: string
    RegionPlatRequestBody:
      type: object
      properties:
        regpName:
          type: string
        regpDesc:
          type: string
        regpProvId:
          type: integer
          format: int64
    RegionPlatResponse:
      type: object
      properties:
        regpDesc:
          type: string
        regpProvId:
          type: integer
          format: int64
    ServiceOrderTasksRequestBody:
      type: object
      properties:
        seotId:
          type: integer
          format: int64
        seotName:
          type: string
        seotStartDate:
          type: string
          format: date
        seotEndDate:
          type: string
          format: date
        seotActualStartdate:
          type: string
          format: date
        seotActualEnddate:
          type: string
          format: date
        seotStatus:
          maxLength: 15
          minLength: 0
          type: string
          enum:
          - INPORGRESS
          - CANCELLED
          - COMPLETED
        seotArwgCode:
          maxLength: 15
          minLength: 0
          type: string
        seotSeroId:
          maxLength: 25
          minLength: 0
          type: string
        areaWorkGroup:
          type: string
        serviceOrders:
          type: string
    ServiceOrdersRequestBody:
      type: object
      properties:
        seroId:
          maxLength: 25
          minLength: 0
          type: string
        seroOrdtType:
          maxLength: 15
          minLength: 0
          type: string
          enum:
          - CREATE
          - MODIFY
          - CLOSE
        seroStatus:
          maxLength: 15
          minLength: 0
          type: string
          enum:
          - OPEN
          - CANCELLED
          - REJECT
          - CLOSED
        seroReason:
          type: string
        servClaimNo:
          maxLength: 12
          minLength: 0
          type: string
        servClaimStartdate:
          type: string
          format: date
        servClaimEnddate:
          type: string
          format: date
        seroServId:
          type: integer
          format: int64
        seroSeroId:
          type: string
        seroAgentEntityid:
          type: integer
          format: int64
        seroArwgCode:
          maxLength: 15
          minLength: 0
          type: string
    ServiceOrderWorkorderRequestBody:
      type: object
      properties:
        sowoId:
          type: integer
          format: int64
        sowoName:
          type: string
        sowoModDate:
          type: string
          format: date
        sowoStatus:
          type: string
        sowoSeotId:
          type: integer
          format: int64
        serviceOrderTasks:
          type: string
    ServicesRequestBody:
      type: object
      properties:
        servId:
          type: integer
          format: int64
        servCreatedOn:
          type: string
          format: date
        servType:
          maxLength: 15
          minLength: 0
          type: string
        servInsuranceNo:
          maxLength: 12
          minLength: 0
          type: string
        servVehicleNumber:
          maxLength: 12
          minLength: 0
          type: string
        servStartDate:
          type: string
          format: date
        servEndDate:
          type: string
          format: date
        servStatus:
          maxLength: 15
          minLength: 0
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        servServId:
          type: integer
          format: int64
        servCustEntityId:
          type: integer
          format: int64
        servCreqEntityId:
          type: integer
          format: int64
    TemplateServiceTaskRequestBody:
      type: object
      properties:
        testaId:
          type: integer
          format: int64
        testaName:
          type: string
        testaGroup:
          type: integer
          format: int64
        templateTaskWorkOrder:
          type: array
          items:
            type: string
    TemplateTaskWorkOrderRequestBody:
      type: object
      properties:
        tewoId:
          type: integer
          format: int64
        tewoName:
          type: string
        tewoTestaId:
          type: integer
          format: int64
    TemplateTaskWorkOrderResponse:
      type: object
      properties:
        tewoName:
          type: string
        tewoTestaId:
          type: integer
          format: int64
    TemplateTypeRequestBody:
      type: object
      properties:
        tetyId:
          type: integer
          format: int64
        tetyName:
          type: string
        tetyGroup:
          type: string
        templateServiceTasks:
          type: array
          items:
            type: string
    TemplateServiceTaskResponse:
      type: object
      properties:
        testaName:
          type: string
        testaGroup:
          type: integer
          format: int64
    ZonesRequestBody:
      type: object
      properties:
        zonesId:
          type: integer
          format: int64
        zonesName:
          type: string
        templateInsurancePremis:
          type: array
          items:
            type: string
    ZonesDto:
      required:
      - zonesName
      type: object
      properties:
        zonesId:
          type: integer
          format: int64
        zonesName:
          maxLength: 55
          minLength: 0
          type: string
    TemplateTypeDto:
      type: object
      properties:
        tetyId:
          type: integer
          format: int64
        tetyName:
          type: string
          enum:
          - CHECK_FEASIBILITY
          - SERVICE_POLIS
          - SERVICE_CLAIM
          - ORDER_CREATE
          - ORDER_MODIFY
          - STATUS_OPEN
          - STATUS_PENDING
          - STATUS_CANCELLED
          - STATUS_CLOSED
        tetyGroup:
          type: string
          enum:
          - SERVICE
          - ORDER
          - STATUS
    TemplateInsurancePremiDto:
      type: object
      properties:
        temiId:
          type: integer
          format: int64
        temiName:
          maxLength: 256
          minLength: 0
          type: string
        temiRateMin:
          type: number
          format: double
        temiRateMax:
          type: number
          format: double
        temiNominal:
          type: number
          format: double
        temiType:
          pattern: ^(Category|Extend)$
          type: string
        temiZonesId:
          type: integer
          format: int64
        temiIntyName:
          maxLength: 25
          minLength: 0
          type: string
        temiCateId:
          type: integer
          format: int64
    AreaWorkGroupDto:
      required:
      - arwgCode
      type: object
      properties:
        arwgCode:
          type: string
        arwgDesc:
          maxLength: 55
          minLength: 0
          type: string
        arwgCityId:
          type: integer
          format: int32
    TewoDto:
      required:
      - tewoName
      type: object
      properties:
        tewoId:
          type: integer
          format: int64
        tewoName:
          maxLength: 55
          minLength: 0
          type: string
        tewoTestaId:
          type: integer
          format: int64
    TemplateServiceTaskDto:
      type: object
      properties:
        testaId:
          type: integer
          format: int64
        testaName:
          maxLength: 55
          minLength: 0
          type: string
        testaGroup:
          type: integer
          format: int64
    RegionPlatDto:
      required:
      - regpName
      type: object
      properties:
        regpName:
          maxLength: 3
          minLength: 0
          type: string
        regpDesc:
          maxLength: 35
          minLength: 0
          type: string
        regpProvId:
          type: integer
          format: int64
    ProvinsiDto:
      required:
      - provName
      type: object
      properties:
        provId:
          type: integer
          format: int64
        provName:
          maxLength: 85
          minLength: 0
          type: string
        prov_zones_id:
          type: integer
          format: int64
    InsuranceTypeDto:
      required:
      - intyName
      type: object
      properties:
        intyName:
          maxLength: 25
          minLength: 0
          type: string
        intyDesc:
          maxLength: 55
          minLength: 0
          type: string
    IbmeDto:
      type: object
      properties:
        ibmeId:
          type: integer
          format: int64
        ibmeDate:
          type: string
          format: date
        ibme_entityid_source:
          type: integer
          format: int32
        ibme_entityid_target:
          type: integer
          format: int32
        ibme_type:
          type: integer
          format: int32
        ibme_count:
          type: integer
          format: int32
    CitiesDto:
      required:
      - cityName
      type: object
      properties:
        cityId:
          type: integer
          format: int64
        cityName:
          maxLength: 85
          minLength: 0
          type: string
        cityProvId:
          type: integer
          format: int64
    CategoryDto:
      required:
      - cateName
      type: object
      properties:
        cateId:
          type: integer
          format: int64
        cateName:
          maxLength: 55
          minLength: 0
          type: string
    CarModelDto:
      required:
      - carmCarbId
      - carmName
      type: object
      properties:
        carmId:
          type: integer
          format: int64
        carmName:
          maxLength: 55
          minLength: 0
          type: string
        carmCarbId:
          type: integer
          format: int64
    CarBrandDto:
      required:
      - cabrName
      type: object
      properties:
        cabrID:
          type: integer
          format: int64
        cabrName:
          maxLength: 55
          minLength: 0
          type: string
    CarSeriesDto:
      required:
      - carsCarmId
      - carsName
      type: object
      properties:
        carsId:
          type: integer
          format: int64
        carsName:
          maxLength: 55
          minLength: 0
          type: string
        carsPassenger:
          type: integer
          format: int32
        carsCarmId:
          type: integer
          format: int64
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
